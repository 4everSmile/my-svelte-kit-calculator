// packages/worktop/src/cache.ts
async function o(n, e) {
  let t = typeof e != "string" && e.method === "HEAD";
  t && (e = new Request(e, { method: "GET" }));
  let a = await n.match(e);
  return t && a && (a = new Response(null, a)), a;
}
function r(n, e, t, a) {
  return (typeof e == "string" || e.method === "GET") && f(t) && (t.headers.has("Set-Cookie") && (t = new Response(t.body, t), t.headers.append("Cache-Control", "private=Set-Cookie")), a.waitUntil(n.put(e, t.clone()))), t;
}
function f(n) {
  if (n.status === 101 || n.status === 206 || ~(n.headers.get("Vary") || "").indexOf("*"))
    return !1;
  let t = n.headers.get("Cache-Control") || "";
  return !/(private|no-cache|no-store)/i.test(t);
}
function l(n) {
  return async function(e, t) {
    let a = await o(n, e);
    if (a)
      return a;
    t.defer((i) => {
      r(n, e, i, t);
    });
  };
}
export {
  f as isCacheable,
  o as lookup,
  r as save,
  l as sync
};
