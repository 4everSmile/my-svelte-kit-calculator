// packages/worktop/src/utils.ts
import { Encoder as c } from "worktop/buffer";
var d = () => crypto.randomUUID(), u = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890-_";
function p(r) {
  for (var t = "", n = r || 11, e = i(n); n--; )
    t += u[e[n] & 63];
  return t;
}
var a = "0123456789ABCDEFGHJKMNPQRSTVWXYZ";
function T() {
  for (var r = "", t = 16, n = Date.now(), e, o = a.length, f = i(t); t--; )
    e = f[t] / 255 * o | 0, e === o && (e = 31), r = a.charAt(e) + r;
  for (t = 10; t--; )
    e = n % o, n = (n - e) / o, r = a.charAt(e) + r;
  return r;
}
function i(r) {
  return crypto.getRandomValues(new Uint8Array(r));
}
function l(r) {
  return r ? c.encode(r).byteLength : 0;
}
async function x(r) {
  let t = r.headers.get("content-type");
  if (!(!r.body || !t))
    return ~t.indexOf("application/json") ? r.json() : ~t.indexOf("multipart/form-data") || ~t.indexOf("application/x-www-form-urlencoded") ? r.formData().then(s) : ~t.indexOf("text/") ? r.text() : r.arrayBuffer();
}
function s(r) {
  let t, n, e, o = {};
  for ([t, n] of r)
    o[t] = (e = o[t]) === void 0 ? n : [].concat(e, n);
  return o;
}
export {
  x as body,
  l as byteLength,
  i as randomize,
  s as toObject,
  p as uid,
  T as ulid,
  d as uuid
};
